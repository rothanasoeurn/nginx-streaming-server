events {}

http {
    server {
        listen 80;

        # Redirect requests for http://<server_ip>:8080/ to http://<server_ip>:8080/players
        location = / {
        absolute_redirect off; # This is required to handle reverse proxy's like NginxProxyManager, otherwise the redirect will include this servers port in the redirect.
        return 302 /players/;
        }

        location /hls/ {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            root /usr/share/nginx/html;

            # proxy_pass https://s3_url/path/;
            # proxy_set_header Host your-s3-bucket.s3.amazonaws.com;
            # proxy_set_header Authorization "";  # If your S3 bucket is public, you can omit this line

            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;

            # Enable CORS headers for HLS
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            # HLS media segment file name should not contain '$' character
            if ($request_uri ~* "(.*/.*\$)") {
                return 403;
            }
        }
        

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }
    }
}
