
## Remote VOD config
######################

worker_processes  auto;

events {
	use epoll;
}

http {
  # Define cache path and settings
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=60m use_temp_path=off;

  log_format  main  '$remote_addr $remote_user [$time_local] "$request" '
	'$status "$http_referer" "$http_user_agent"';

	access_log  	off;
	error_log   	stderr warn;

	default_type  	application/octet-stream;
	include       	/usr/local/nginx/conf/mime.types;

	sendfile    	on;
	tcp_nopush  	on;
	tcp_nodelay 	on;

	upstream REMOTE_VOD {
		server s3_url:443;
	}

	server {
		open_file_cache          			max=1000 inactive=5m;
		open_file_cache_valid    			2m;
		open_file_cache_min_uses 			1;
		open_file_cache_errors   			on;

		# gzip manifests
		gzip on;
		gzip_types application/vnd.apple.mpegurl;

		location ~ ^/stream-bucket/(.*.mp4)$ {
            proxy_cache my_cache;
            proxy_cache_valid 200 301 302 10m;  # Cache successful responses for 10 minutes
            proxy_cache_valid 404 1m;  # Cache 404 responses for 1 minute
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;

            #proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            #proxy_set_header Authorization {FORWARD_AUTH_URL};
			#proxy_pass https://{NAME}/{BUCKET_NAME}/$1;

			proxy_pass https://REMOTE_VOD/stream-bucket/$1;
		}

		location ~ ^/stream-bucket/nginx_status {
			stub_status;
		}
	}
}